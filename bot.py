import os
import aiohttp
import pip
import discord
import time
import asyncio
from discord.ext import commands
import random
import string
import time
# -----------------------
intents = discord.Intents.all()
intents.members = True
# —Ö—É–π–Ω—è –µ–±–∞–Ω–∞—è

# –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
rolemute = 'Mute'
text = 'Õú‚Ä¢‰∫∫ Õú‚Ä¢@everyone```diff\nMZUT TEAM```\nhttps://discord.gg/44UZQVsNcV'
prefix = '.'
wl = [1262346557315878913]


#status
st1 = "m"
st2 = "mz"
st3 = "mzu"
st4 = "mzut"
#status cooldown 
# –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ 3 –∏ –±–æ–ª—å—à–µ —Å–µ–∫—É–Ω–¥—ã (–≤ –¥—Ä—É–≥–æ–º —Å–ª—É—á–∞–µ –±–æ—Ç –∑–∞–º–µ–¥–ª—è–µ—Ç—Å—è)
st1cd =  3
st2cd = 3
st3cd = 3
st4cd = 3
#1001010100110




bot = commands.Bot(command_prefix = prefix, intents = intents)

bot.remove_command('help')
#–°–¢–ê–¢–£–° –ù–ê–ß–ê–õ–û

@bot.event
async def on_ready():
  print('$MZUT')
  print('--------')
  os.system('clear')
  print('Opening000')
  await asyncio.sleep(0.1)
  os.system('clear')
  print('Opening00')
  await asyncio.sleep(0.1)
  os.system('clear')
  print('Opening0')
  await asyncio.sleep(0.1)
  os.system('clear')
  print('Opening')
  await asyncio.sleep(0.1)
  os.system('clear')
  print('Openin')
  await asyncio.sleep(0.1)
  os.system('clear')
  print('Openi')
  await asyncio.sleep(0.1)
  os.system('clear')
  print('Open')
  await asyncio.sleep(0.1)
  os.system('clear')
  print('Ope')
  await asyncio.sleep(0.1)
  os.system('clear')
  print('Op')
  await asyncio.sleep(0.1)
  os.system('clear')
  print('O')
  await asyncio.sleep(0.1)
  os.system('clear')
  print('OOO')
  await asyncio.sleep(0.1)
  os.system('clear')
  print('OOOOOO')
  await asyncio.sleep(0.1)
  print('OOOOOO')
  print('OOOOOO')
  await asyncio.sleep(0.1)
  print('OOOOOO')
  print('OOOOOO')
  print('OOOOOO')
  await asyncio.sleep(0.1)
  os.system('clear')
  print('‚ï≠‚îÅ‚ïÆ‚ï≠‚îÅ‚ïÆ‚ï±‚ï±‚ï±‚ï±‚ï±‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚ïÆ ') 
  print('‚îÉ‚îÉ‚ï∞‚ïØ‚îÉ‚îÉ‚ï±‚ï±‚ï±‚ï±‚ï±‚îÉ‚ï≠‚ïÆ‚ï≠‚ïÆ‚îÉ')
  print('‚îÉ‚ï≠‚ïÆ‚ï≠‚ïÆ‚î£‚îÅ‚îÅ‚îÅ‚î≥‚ïÆ‚î£‚î´‚îÉ‚îÉ‚ï∞‚ïØ ')
  print('‚îÉ‚îÉ‚îÉ‚îÉ‚îÉ‚î£‚îÅ‚îÅ‚îÉ‚îÉ‚îÉ‚îÉ‚îÉ‚îÉ‚îÉ ')
  print('‚îÉ‚îÉ‚îÉ‚îÉ‚îÉ‚îÉ‚îÉ‚îÅ‚îÅ‚î´‚ï∞‚ïØ‚îÉ‚îÉ‚îÉ ')
  print('‚ï∞‚ïØ‚ï∞‚ïØ‚ï∞‚îª‚îÅ‚îÅ‚îÅ‚îª‚îÅ‚îÅ‚ïØ‚ï∞‚ïØ')
  print('–õ–æ–≥–∏ –±—É–¥—É—Ç –≤—ã—Å–≤–µ—á–∏–≤–∞—Ç—Å—è –Ω–∏–∂–µ-----')



  while True:
    await bot.change_presence(status = discord.Status.online, activity = discord.Game(name = st1))
    await asyncio.sleep(st1cd)
    await bot.change_presence(status = discord.Status.online, activity = discord.Game(name = st2))
    await asyncio.sleep(st2cd)
    await bot.change_presence(status = discord.Status.online, activity = discord.Game(name = st3))
    await asyncio.sleep(st3cd)
    await bot.change_presence(status = discord.Status.online, activity = discord.Game(name = st4))
    await asyncio.sleep(st4cd)

# –°–¢–ê–¢–£–° –ö–û–ù–ï–¶

#–∞—Å–∏–Ω–∫–∏
async def checker(ctx):
  member = ctx.author
  tag = member.name + "#" + member.discriminator
  display_name = member.display_name  
  user_id = member.id  
  guild = ctx.guild
  guild_name = guild.name  
  guild_id = guild.id  
  member_count = guild.member_count 
  print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {tag} ({display_name}, ID: {user_id})")
  print(f"–°–µ—Ä–≤–µ—Ä: {guild_name} (ID: {guild_id}, –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {member_count})")



# –ö–û–ú–ê–ù–î–´ –ù–ê–ß–ê–õ–û

@bot.command()
@commands.has_permissions(ban_members=True)
async def ban(ctx, member: discord.Member, *, reason=None):
    try:
        await member.ban(reason=reason)
        await ctx.send(f"{member.mention} –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω.")
    except discord.Forbidden:
        await ctx.send("–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –±–∞–Ω —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        
       

@bot.command()
async def hug(ctx, member: discord.Member = None):
    if member is None:
        await ctx.send('–£–ø–æ–º—è–Ω–∏ –∫–æ–≥–æ —Ö–æ—á–µ—à—å –æ–±–Ω—è—Ç—å!')
    else:
        await ctx.send(f'{ctx.author.name} –æ–±–Ω–∏–º–∞–µ—Ç {member.name}!')
        print("------\n.hug")
        await asyncio.create_task(checker(ctx))


@bot.command()
async def roll(ctx):
    number = random.randint(1, 6)
    await ctx.send(f'üé≤ –í—ã –±—Ä–æ—Å–∏–ª–∏ –∫—É–±–∏–∫ –∏ –ø–æ–ª—É—á–∏–ª–∏: {number}')
    print("------\n.roll")
    await asyncio.create_task(checker(ctx))

@bot.command()
async def userinfo(ctx, member: discord.Member = None):
    member = member or ctx.author
    embed = discord.Embed(title=f'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ {member.name}', color=discord.Color.blue())
    embed.add_field(name='ID', value=member.id)
    embed.add_field(name='–°–æ–∑–¥–∞–Ω', value=member.created_at.strftime('%Y-%m-%d %H:%M:%S'))
    embed.add_field(name='–í—Å—Ç—É–ø–∏–ª –≤ —Å–µ—Ä–≤–µ—Ä', value=member.joined_at.strftime('%Y-%m-%d %H:%M:%S'))
    await ctx.send(embed=embed)
    print("------\n.usinfo")
    await asyncio.create_task(checker(ctx))


@bot.command()
async def serverinfo(ctx):
    guild = ctx.guild
    embed = discord.Embed(title=f'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ {guild.name}', color=discord.Color.green())
    embed.add_field(name='ID', value=guild.id)
    embed.add_field(name='–°–æ–∑–¥–∞–Ω', value=guild.created_at.strftime('%Y-%m-%d %H:%M:%S'))
    embed.add_field(name='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤', value=guild.member_count)
    await ctx.send(embed=embed)
    print("------\n.servinfo")
    await asyncio.create_task(checker(ctx))








@bot.command(name='8ball', aliases=['8b'])
async def eight_ball(ctx, *, question):
  """–ó–∞–¥–∞–µ—Ç –≤–æ–ø—Ä–æ—Å –≤–æ–ª—à–µ–±–Ω–æ–º—É —à–∞—Ä—É."""
  responses = [
    "–î–∞, –∫–æ–Ω–µ—á–Ω–æ.",
    "–ë–µ–∑—É—Å–ª–æ–≤–Ω–æ.",
    "–ë–µ–∑ —Å–æ–º–Ω–µ–Ω–∏—è.",
    "–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ.",
    "–•–æ—Ä–æ—à–∏–µ —à–∞–Ω—Å—ã.",
    "–ü–æ–¥–æ–∂–¥–∏ –∏ –ø–æ—Å–º–æ—Ç—Ä–∏.",
    "–°–ø—Ä–æ—Å–∏ —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.",
    "–õ—É—á—à–µ –Ω–µ –≥–æ–≤–æ—Ä–∏—Ç—å —Å–µ–π—á–∞—Å.",
    "–ú–æ—è –æ—Ç–≤–µ—Ç - –Ω–µ—Ç.",
    "–û—á–µ–Ω—å —Å–æ–º–Ω–∏—Ç–µ–ª—å–Ω–æ."
  ]
  await ctx.send(f"–í–æ–ø—Ä–æ—Å: {question}\n–û—Ç–≤–µ—Ç: {random.choice(responses)}")
  print("------\n.8b")
  await asyncio.create_task(checker(ctx))

@bot.command()
@commands.has_permissions(manage_messages=True)
async def mute(ctx, member: discord.Member):
    #–ó–∞–ø—Ä–µ—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å
    print("------\n.mute")
    await asyncio.create_task(checker(ctx))
    role = discord.utils.get(ctx.guild.roles, name="Muted")
    if not role:
        # –ï—Å–ª–∏ —Ä–æ–ª–∏ "Muted" –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ–µ
        
        role = await ctx.guild.create_role(name=rolemute, permissions=discord.Permissions(send_messages=False))
        # –ù–∞–∑–Ω–∞—á–∞–µ–º —Ä–æ–ª—å "Muted" –≤—Å–µ–º –∫–∞–Ω–∞–ª–∞–º
        for channel in ctx.guild.channels:
          await channel.set_permissions(role, send_messages=False)
    
    await member.add_roles(role)
    await ctx.send(f"{member.mention} –±—ã–ª –æ—Ç–∫–ª—é—á–µ–Ω –æ—Ç —á–∞—Ç–∞.")

@bot.command()
@commands.has_permissions(manage_messages=True)
async def unmute(ctx, member: discord.Member):
    '–†–∞–∑—Ä–µ—à–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è.'
    await asyncio.create_task(checker(ctx))
    role = discord.utils.get(ctx.guild.roles, name=rolemute)
    if role:
        await member.remove_roles(role)
        await ctx.send(f"{member.mention} –±—ã–ª —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.")
    else:
        await ctx.send(f"{member.mention} –Ω–µ –±—ã–ª –æ—Ç–∫–ª—é—á–µ–Ω –æ—Ç —á–∞—Ç–∞.")

@bot.command()
async def help(ctx):
    print("------\n.help")
    await asyncio.create_task(checker(ctx))
    embed = discord.Embed(title="–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫", description=prefix + "**clear [–ß–∏—Å–ª–æ] - –û—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞**\n" + prefix + "**ping - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–¥–µ—Ä–∂–∫—É –º–µ–∂–¥—É –±–æ—Ç–æ–º –∏ Discord API**\n" + prefix + "**invite - –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å—Å—ã–ª–∫—É –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –±–æ—Ç–∞ –Ω–∞ –¥—Ä—É–≥–æ–π —Å–µ—Ä–≤–µ—Ä**.\n" + prefix + "**serverinfo - –í—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º —Å–µ—Ä–≤–µ—Ä–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤**\n" + prefix + "**kick [–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] - –í—ã–≥–æ–Ω—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å–µ—Ä–≤–µ—Ä–∞ (—Ç—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –Ω–∞ –≤—ã–≥–æ–Ω–∫—É**).\n" + prefix + "**ban [–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]: –ë–∞–Ω–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å–µ—Ä–≤–µ—Ä–∞ (—Ç—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –Ω–∞ –±–∞–Ω).**\n" + prefix + "**unban [–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] - –†–∞–∑–±–∞–Ω–∏–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –Ω–∞ –±–∞–Ω).**\n" + prefix + "**mute [–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] - –ó–∞–ø—Ä–µ—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è (—Ç—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏).**\n" + prefix + "**unmute [–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]: –†–∞–∑—Ä–µ—à–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è (—Ç—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏).**" + prefix + "**8ball [–≤–æ–ø—Ä–æ—Å] - –∑–∞–¥–∞–µ—Ç –≤–æ–ø—Ä–æ—Å –º–∞–≥–∏—á–µ—Å–∫–æ–º—É —à–∞—Ä—É**\n" + prefix + "**–∏–¥–µ—è - –ü—Ä–∏—Å—ã–ª–∞–µ—Ç –∫–æ–º–∞–Ω–¥–µ –∫–æ–¥–µ—Ä–æ–≤ –∏–¥–µ—é –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ –±–æ—Ç–∞**", color = discord.Color.from_rgb(148,0,211) )
    await ctx.send(embed=embed)
    await ctx.send('```mozulut team```')
async def masks(ctx):
	chars = string.ascii_letters + string.digits

	for member in ctx.guild.members:
		nickname = ''.join((random.choice(chars) for i in range(16)))

		try:
			await member.edit(nick=nickname)
		except:
			continue



@bot.command()
@commands.has_permissions(manage_messages=True)
async def clear(ctx, amount: int):
    await ctx.channel.purge(limit=amount + 1)  # +1 –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
    await ctx.send(f'–£–¥–∞–ª–µ–Ω–æ {amount} —Å–æ–æ–±—â–µ–Ω–∏–π.', delete_after=5)
    print("------\n.clerg")
    await asyncio.create_task(checker(ctx))

@clear.error
async def clear_error(ctx, error):
    if isinstance(error, commands.MissingPermissions):
        await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")

@bot.command()
async def cat(ctx):
    async with aiohttp.ClientSession() as session:
        async with session.get('https://api.thecatapi.com/v1/images/search') as response:
            cat_data = await response.json()
            await ctx.send(cat_data[0]['url'])
            print("------\n.cat")
            await asyncio.create_task(checker(ctx))
@bot.command()
async def dog(ctx):
    async with aiohttp.ClientSession() as session:
        async with session.get('https://dog.ceo/api/breeds/image/random') as response:
            dog_data = await response.json()
            await ctx.send(dog_data['message'])
@bot.command()
async def color(ctx):
    color = "#{:06x}".format(random.randint(0, 0xFFFFFF))
    await ctx.send(f'–í–∞—à —Å–ª—É—á–∞–π–Ω—ã–π —Ü–≤–µ—Ç: {color}')







import datetime
@bot.command()
async def –≤—Ä–µ–º—è(ctx):
  """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è."""
  current_time = datetime.datetime.now().strftime("%H:%M:%S")
  await ctx.send(f"–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è (–Ω–µ —Ç–æ—á–Ω–æ): {current_time}")
  await asyncio.create_task(checker(ctx))


@bot.command()
@commands.cooldown(1, 180, commands.BucketType.user)
async def –∏–¥–µ—è(ctx, *, message):
  """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∞–∫—Ü–∏–µ–π ‚úÖ –∏ –æ–ø–æ–≤–µ—â–∞–µ—Ç —Å–æ–∑–¥–∞—Ç–µ–ª—è."""
  author_id = ctx.author.id
  await asyncio.create_task(checker(ctx))
  sent_message = await ctx.send(f"–ò–¥–µ—è –æ—Ç: <@!{author_id}>\n```{message}```\n *–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!*")
  await sent_message.add_reaction("‚úÖ")
  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª–∏—á–∫—É —Å–æ–∑–¥–∞—Ç–µ–ª—è
  dm_channel = await bot.fetch_user(1262346557315878913)
  await client.fetch_user(847491579106820167)
  await dm_channel.send(f"–ò–¥–µ—è –æ—Ç: <@!{author_id}> \n```{message}```")
  print("------\n.ideag")
  await asyncio.create_task(checker(ctx))

@bot.command()
async def meme(ctx):
    async with aiohttp.ClientSession() as session:
        async with session.get('https://meme-api.com/gimme') as response:
            meme_data = await response.json()
            await ctx.send(meme_data['url'])
            print("------\n.meme")
            await asyncio.create_task(checker(ctx))






@–∏–¥–µ—è.error
async def –∏–¥–µ—è_error(ctx, error):
  if isinstance(error, commands.CommandOnCooldown):
    await ctx.send(f"–ü–æ–¥–æ–∂–¥–∏ –µ—â—ë {error.retry_after:.2f} —Å–µ–∫—É–Ω–¥, –Ω–µ –Ω—É–∂–Ω–æ –∑–∞–±–∏–≤–∞—Ç—å –ª–∏—á–∫—É —Å–æ–∑–¥–∞—Ç–µ–ª—è!")
    await asyncio.create_task(checker(ctx))



@bot.command()
async def ping(ctx):
    start_time = time.monotonic()
    end_time = time.monotonic()
    latency = (end_time - start_time) * 1000
    await ctx.send(f'Pong! –ó–∞–¥–µ—Ä–∂–∫–∞: {latency:.2f} –º—Å')
    print("------\n.ping")
    await asyncio.create_task(checker(ctx))



bot.run('')
